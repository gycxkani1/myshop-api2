怎样将json对象转换为python对象？

在Python中，将JSON对象转换为Python对象可以通过使用json模块中的loads()函数实现。loads()函数可以将JSON格式的字符串解析为Python的数据类型（如字典、列表、字符串、数字等）。

示例

假设你有一个JSON格式的字符串，你想将它转换为Python对象。

JSON字符串
{
  "name": "John Doe",
  "age": 30,
  "is_student": false,
  "courses": ["Math", "Science"]
}
转换为Python对象的代码
import json
 
# JSON格式的字符串
json_str = '''
{
  "name": "John Doe",
  "age": 30,
  "is_student": false,
  "courses": ["Math", "Science"]
}
'''
 
# 使用json.loads()将JSON字符串转换为Python对象（通常是字典）
data = json.loads(json_str)
 
# 打印结果，查看转换后的Python对象
print(data)
print("Name:", data['name'])
print("Age:", data['age'])
print("Is student:", data['is_student'])
print("Courses:", data['courses'])
输出
{'name': 'John Doe', 'age': 30, 'is_student': False, 'courses': ['Math', 'Science']}
Name: John Doe
Age: 30
Is student: False
Courses: ['Math', 'Science']
使用json.load()从文件读取JSON并转换为Python对象

如果你有一个包含JSON数据的文件，可以使用json.load()函数来读取文件并解析其内容为Python对象。

示例代码
import json
 
# 假设json_data.json是一个文件，内容与上面的json_str相同
with open('json_data.json', 'r') as file:
    data = json.load(file)  # 从文件中读取并解析JSON数据为Python对象（通常是字典）
    print(data)
    print("Name:", data['name'])
    print("Age:", data['age'])
    print("Is student:", data['is_student'])
    print("Courses:", data['courses'])

确保你的文件路径正确，且文件内容是有效的JSON格式。这样你就可以轻松地将JSON数据转换为Python对象，进而在Python中进行进一步处理。